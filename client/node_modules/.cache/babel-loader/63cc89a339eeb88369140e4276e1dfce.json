{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBS4ZVAZmmR_mcnAbr0y9QIG1PKCadcP4Y\",\n  authDomain: \"crwn-db-e325f.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-e325f.firebaseio.com\",\n  projectId: \"crwn-db-e325f\",\n  storageBucket: \"crwn-db-e325f.appspot.com\",\n  messagingSenderId: \"519910577700\",\n  appId: \"1:519910577700:web:a303cdc9c4a79480926ab1\",\n  measurementId: \"G-KPPZVEPZM2\"\n};\nexport const createUserProfileDocument = async (userAuth, addonData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...addonData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/saurabhshukl/Documents/Saurabh_Training/ZTM_React/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addonData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","createAt","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA+B;AACpE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAIC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAI,IAAIC,IAAJ,EAAnB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAa;AACfJ,QAAAA,WADe;AAEfC,QAAAA,KAFe;AAGfI,QAAAA,QAHe;AAIf,WAAGb;AAJY,OAAb,CAAN;AAMH,KAPD,CAOE,OAAOc,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOhB,OAAP;AACH,CAvBM;AAyBPb,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AAEA,OAAO,MAAM8B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBS4ZVAZmmR_mcnAbr0y9QIG1PKCadcP4Y\",\n    authDomain: \"crwn-db-e325f.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-e325f.firebaseio.com\",\n    projectId: \"crwn-db-e325f\",\n    storageBucket: \"crwn-db-e325f.appspot.com\",\n    messagingSenderId: \"519910577700\",\n    appId: \"1:519910577700:web:a303cdc9c4a79480926ab1\",\n    measurementId: \"G-KPPZVEPZM2\"\n};\n\nexport const createUserProfileDocument = async (userAuth, addonData) => {\n    if (!userAuth) return;\n\n    const userRef  = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    \n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt =  new Date();\n\n        try {\n            await userRef.set ({\n                displayName,\n                email,\n                createAt,\n                ...addonData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n    \n    return userRef;\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}