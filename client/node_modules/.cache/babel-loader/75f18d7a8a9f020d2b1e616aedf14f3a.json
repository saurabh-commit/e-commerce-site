{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhshukl/Documents/Saurabh_Training/ZTM_React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubsribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubsribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/saurabhshukl/Documents/Saurabh_Training/ZTM_React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","unsubsribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BS,sBAD6B,GACJ,IADI;AAAA;;AAG7BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEH,MAAAA;AAAF,QAAwB,KAAKI,KAAnC;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,sBAAL,GAA8BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACrE,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAR,MAAAA,iBAAiB,CAACS,cAAD,CAAjB;AACH,KAH6B,CAA9B;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACI,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA;AAOP;;AAtB4B;;AAyBjC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,iBAAiB,EAAES,cAAc,IAC7BK,QAAQ,CAACd,iBAAiB,CAACS,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAKA,eAAed,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n    unsubsribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n        \n        this.unsubsribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n            return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n            \n        );\n    }\n}   \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n        dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}